/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.51).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.InlineResponse404;
import io.swagger.model.Workout;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import jakarta.annotation.Generated;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

@Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2024-01-02T13:12:44.972642873Z[GMT]")
@Validated
public interface WorkoutsApi {

    @Operation(summary = "Retrieve all information about specific workout", description = "Takes workout id from path parameter, finds all information about this specific workout and returns it", tags={ "workouts" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "Succesfully found workout information", content = @Content(mediaType = "application/json", schema = @Schema(implementation = Workout.class))),
        
        @ApiResponse(responseCode = "404", description = "Workout information does not exist", content = @Content(mediaType = "application/json", schema = @Schema(implementation = InlineResponse404.class))) })
    @RequestMapping(value = "/workouts/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Workout> getWorkoutById(@PathVariable Integer id);


    @Operation(summary = "", description = "", tags={ "workouts" })
    @ApiResponses(value = {  })
    @RequestMapping(value = "/workouts",
        method = RequestMethod.GET)
    ResponseEntity<Void> workoutsGet();


    @Operation(summary = "", description = "", tags={ "workouts" })
    @ApiResponses(value = {  })
    @RequestMapping(value = "/workouts",
        method = RequestMethod.POST)
    ResponseEntity<Void> workoutsPost();

}

